Server:
--------
1. Parse the user's file.
2. Start listening on <port>.
3. Accept client connnections and handshake.
4. If ok, start accepting commands.

 
Client:
--------
1. Get the username and password
2. Attempt to connect to <ip>:<port> and handshake.
3. If ok, start sending commands. 


Connection creation and handshake flow:
-----------------------------------------
Client will send a ClientHello message to the server.
The Server will authenticate the user and password from the 
ClientHello message. If authentication fails close the connection.
If authentcation suceeds then the Server will send a ServerHello
message. Once the Client receives the ServerHello message it can 
proceed to send a command to the server. If the server encounters
an error processing a command it will return an ErrorResponse message.


Message Formats:
------------------
ClientHello:
<1 byte> - 0x01
<1 byte> - <username len>
<1 byte> - <password len>
<variable> - <username>
<variable> - <password>

ServerHello:
<1 byte> - 0x02
<1 byte> - <transfer mode value>    # see below for modes
<1 byte> - <compression mode value>
<1 byte> - <encryption mode value>

CDRequest: 
<1 byte> - 0x03
<1 byte> - <directory name len>
<variable> - <directory name>

CDResponse:
<1 byte> - 0x04
<2 byte> - 0x6f6b

LSRequest:
<1 byte> - 0x05

LSResponse:
<1 byte> - 0x06
<4 byte> - <folders len>    
<4 byte> - <files len>
<variable> - <folders>  # semicolon (;) separated string
<variable> - <files>    # semicolon (;) separated string

GetRequest:
<1 byte> - 0x07
<1 byte> - <number of filenames>    # if 0x00 then means glob string for filename
<1 byte> - <1st filename len>
<variable - <1st filename>
... repeat ...
<1 byte> - <nth filename len>
<variable> <nth filename>

GetResponse:
<1 byte> - 0x08
<4 byte> - <number of files>
<1 byte> - <1st filename len>
<variable> - <1st filename>
<8 byte> - <1st file length>
<variable> - <1st file>
... repeat ...
<1 byte> - <nth filename len>
<variable> - <nth filename>
<8 byte> - <nth file length>
<variable> - <nth file>

PutRequest:
<1 byte> - 0x09
<4 byte> - <number of files>
<1 byte> - <1st filename len>
<variable> - <1st filename>
<8 byte> - <1st file len>
<variable> - <1st file>
... repeat ...
<1 byte> - <nth filename len>
<variable> - <nth filename>
<8 byte> - <nth file len>
<variable> - <nth file>

PutResponse:
<1 byte> - 0x0A

QuitRequest:
<1 byte> - 0x0B

QuitResponse:
<1 byte> - 0x0C

ErrorResponse:
<1 byte> - 0x0D
<1 byte> - <error value>

# Mode - Name - (value - description), (value - description)
# 0x01 - Transfer - (0x00 - Binary), (0x01 - ASCII)
# 0x02 - Compression (0x00 - Off), (0x01 - On)
# 0x03 - Encryption (0x00 - Off), (0x01 - On)
ChangeModeRequest:
<1 byte> - 0x0E
<1 byte> - <mode> 
<1 byte> - <value>

ChangeModeResponse:
<1 byte> - 0x0F
<1 byte> - <mode>
<1 byte> - <value>


User file:
------------
# username::sha256 password hash::root folder 
alexmullins::f25215f303abd8dae2632b2ccbaa6f4ee8f1daac94b2faa22ad60efca3f880fd::/tmp/alex/

